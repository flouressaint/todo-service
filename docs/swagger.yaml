basePath: /
definitions:
  echo.HTTPError:
    properties:
      message: {}
    type: object
  github_com_flouressaint_todo-service_internal_entity.Todo:
    properties:
      completed:
        type: boolean
      id:
        type: string
      title:
        type: string
      user_id:
        type: string
    required:
    - title
    type: object
  internal_controller.todoInput:
    properties:
      completed:
        type: boolean
      title:
        type: string
    required:
    - title
    type: object
  internal_controller.todoRoutes:
    type: object
host: localhost:8000
info:
  contact:
    name: Kadomtcev Vyacheslav
  description: This is a service for managing todos.
  title: Todo Service
  version: "1.0"
paths:
  /api/todo:
    get:
      consumes:
      - application/json
      description: Get todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_flouressaint_todo-service_internal_entity.Todo'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - BearerAuth: []
      summary: Get todos
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create todo
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_controller.todoInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_controller.todoRoutes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - BearerAuth: []
      summary: Create todo
      tags:
      - todos
  /api/todo/{id}:
    delete:
      description: Delete todo
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller.todoRoutes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - BearerAuth: []
      summary: Delete todo
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Update todo
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_controller.todoInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller.todoRoutes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - BearerAuth: []
      summary: Update todo
      tags:
      - todos
securityDefinitions:
  BearerAuth:
    description: JWT token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
